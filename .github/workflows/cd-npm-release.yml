# .github/workflows/release-auto.yml
# Automatic release workflow using release-please
# Triggered on push to main branch
# Creates: Release PR â†’ Git tag, GitHub release, npm package
name: npm Release

on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write
  issues: write
  packages: write

jobs:
  cd-npm-release:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.get_tag.outputs.tag_name }}
    steps:
      - name: Release Please Action
        id: release
        uses: googleapis/release-please-action@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          config-file: release-please-config.json
          manifest-file: .release-please-manifest.json

      # The following steps only run if a release was created
      - name: Checkout
        if: ${{ steps.release.outputs.release_created }}
        uses: actions/checkout@v4

      - name: Setup Bun
        if: ${{ steps.release.outputs.release_created }}
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        if: ${{ steps.release.outputs.release_created }}
        run: bun install --frozen-lockfile

      - name: Run CI
        if: ${{ steps.release.outputs.release_created }}
        run: bun run ci

      - name: Build
        if: ${{ steps.release.outputs.release_created }}
        run: bun run build

      # Setup Node.js for npm publish command
      # Although we use Bun for development, npm publish requires Node.js environment
      - name: Setup Node.js
        if: ${{ steps.release.outputs.release_created }}
        uses: actions/setup-node@v4
        with:
          node-version: 'latest'
          registry-url: 'https://registry.npmjs.org'

      - name: Publish to npm
        if: ${{ steps.release.outputs.release_created }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npm publish

      - name: Get created tag
        if: ${{ steps.release.outputs.release_created }}
        id: get_tag
        run: |
          # Get the version from package.json (which release-please just updated)
          VERSION=$(jq -r .version package.json)
          TAG_NAME="v${VERSION}"
          echo "tag_name=${TAG_NAME}" >> $GITHUB_OUTPUT
          echo "Created tag: ${TAG_NAME}"
